on:
  push:
    branches:
      - main
    paths:
      - '**.proto'
    tags-ignore:
      - "**"

name: on-commit-to-main
env:
  REPOSITORY: "ssh2003/target-for-sync"
jobs:
  send-pull-requests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0 # Checkout everything to get access to the tags
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup env
        run: |
          echo "LATEST_TAG=$(git rev-parse --short=6 HEAD)" >> "$GITHUB_ENV"
          echo "FOLDER=bin/${{ env.REPOSITORY }}" >> "$GITHUB_ENV"
      - name: Setup BRANCH_NAME
        run: |
          echo "BRANCH_NAME=update-proto-to-$LATEST_TAG" >> $GITHUB_ENV
      - name: use env
        run: |
          echo "============================================================="
          echo "${{ env.LATEST_TAG }}"
          echo "${{ env.REPOSITORY }}"
          echo "${{ env.FOLDER }}"
          echo "${{ env.BRANCH_NAME }}"
      - name: clone target repo
        run: |
          # Clone the remote repository and change working directory to the
          # folder it was cloned to.
          git clone \
            --depth=1 \
            --branch=main \
            https://ssh2003:${{ secrets.GH_TOKEN }}@github.com/${{ env.REPOSITORY }} \
            $FOLDER
      - name: create new branch
        run: |
          cd ${{ env.FOLDER }}
          # Create a new feature branch for the changes.
          git checkout -b $BRANCH_NAME
      - name: copy all files from source repo
        run: |
           cd ${{ env.FOLDER }}
           cp -Rv ../../../source/dir/ target/
      - name: check if we need to commit
        id: changed-files-specific
        uses: tj-actions/changed-files@v36
        with:
          files: source/dir/*.proto
      - name: Run commit if any file(s) proto change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd ${{ env.FOLDER }}
          # set commiter identity
          git config user.email "serhii.khylyk@gmail.com"
          git config user.name "Serhii Khylyk"
          # Commit the changes and push the feature branch to origin
          git add .
          git commit -m "update proto to ${{ env.LATEST_TAG }}"
          git push origin ${{ env.BRANCH_NAME }}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          assignee: "ssh2003"
          path: ${{ env.FOLDER }}
      # - name: make PR
      #   if: steps.changed-files-specific.outputs.any_changed == 'true'
      #   run: |
      #     cd ${{ env.FOLDER }}
      #     echo ${{ secrets.GH_TOKEN }} | gh auth login --with-token
      #     gh pr create \
      #       --body "" \
      #       --title "update proto to ${{ env.LATEST_TAG }}" \
      #       --head "${{ env.BRANCH_NAME }}" \
      #       --base "main" \
      #       --assignee "ssh2003"
