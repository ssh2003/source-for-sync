on:
  push:
    branches:
      - main
    paths:
      - '**.proto'
    tags-ignore:
      - "**"

name: on-commit-to-main
env:
  REPOSITORY: "ssh2003/target-for-sync"

jobs:
  send-pull-requests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0 # Checkout everything to get access to the tags
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup env
        run: |
          echo "LATEST_TAG=$(git rev-parse --short=6 HEAD)" >> "$GITHUB_ENV"
          echo "FOLDER=bin/${{ env.REPOSITORY }}" >> "$GITHUB_ENV"
      - name: Setup BRANCH_NAME
        run: |
          echo "BRANCH_NAME=update-proto-to-$LATEST_TAG" >> $GITHUB_ENV
      - name: use env
        run: |
          echo "============================================================="
          echo "${{ env.LATEST_TAG }}"
          echo "${{ env.REPOSITORY }}"
          echo "${{ env.FOLDER }}"
          echo "{{ env.BRANCH_NAME }}"

          # # Clone the remote repository and change working directory to the
          # # folder it was cloned to.
          # git clone \
          #   --depth=1 \
          #   --branch=main \
          #   https://ssh2003:${{ secrets.GH_TOKEN }}@github.com/$REPOSITORY \
          #   $FOLDER
          #   cd $FOLDER
          #
          #   # Setup the committers identity.
          #   git config user.email "serhii.khylyk@gmail.com"
          #   git config user.name "Serhii Khylyk"
          #
          #   # Create a new feature branch for the changes.
          #   git checkout -b $BRANCH_NAME
          #
          #   cp -Rv ../../../source/dir/ target/ && \
          #   git status && \
          #   DIFF=$(git status) && \
          #   echo "$DIFF" && \
          #   STATUS=$(echo $DIFF|grep proto|wc -l)
          #   echo $STATUS
          #   if [ $STATUS -le 0 ];
          #   then
          #     echo "Nothing changed..."
          #     exit 0
          #   fi
          #   # Commit the changes and push the feature branch to origin
          #   git add .
          #   git commit -m "update proto to ${{ env.LATEST_TAG }}"
          #   git push origin $BRANCH_NAME
          #
          #   # Store the PAT in a file that can be accessed by the
          #   # GitHub CLI.
          #   echo "${{ secrets.GH_TOKEN }}" > token.txt
          #
          #   # Authorize GitHub CLI for the current repository and
          #   # create a pull-requests containing the updates.
          #   gh auth login --with-token < token.txt
          #   gh pr create \
          #     --body "" \
          #     --title "update proto to ${{ env.LATEST_TAG }}" \
          #     --head "$BRANCH_NAME" \
          #     --base "main" \
          #     --assignee "ssh2003" \
          #     -r "ssh2003"
