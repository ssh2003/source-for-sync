---
name: on-proto-update

on:
  workflow_call:
    inputs:
      repo:
        description: Repository to sync
        required: true
        type: string

jobs:
  send-pull-requests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          token: ${{ secrets.GH_TOKEN }}
      - name: Setup env
        run: |
          echo "LATEST_TAG=$(git rev-parse --short=6 HEAD)" >> "$GITHUB_ENV"
          echo "FOLDER=bin/${{ inputs.repo }}" >> "$GITHUB_ENV"
      - name: Setup BRANCH_NAME
        run: |
          echo "BRANCH_NAME=update-proto-to-$LATEST_TAG" >> $GITHUB_ENV
      - name: clone target repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          repository: ${{ inputs.repo }}
          path: ${{ env.FOLDER }}
          token: ${{ secrets.GH_TOKEN }}
      - name: create new branch
        run: |
          cd ${{ env.FOLDER }}
          # Create a new feature branch for the changes.
          git checkout -b ${{ env.BRANCH_NAME }}
      - name: check json
        run: |
          cd ${{ env.FOLDER }}
          ls -la
      - name: python script
        run: |
          cat << EOF > /tmp/script.py
          #!/usr/bin/env python3
          import json, sys, shutil
          file_name = sys.argv[1]
          with open(file_name, 'r') as file:
            json=json.load(file)
            for row in json['proto']:
              shutil.copyfile("../../../" + row['source'], row['target'])
          EOF
      - name: check script
        run: |
          cat /tmp/script.py
      - name: run script
        run: |
          cd ${{ env.FOLDER }}
          ls -ls ../../../
          python3 /tmp/script.py .proto-sync.json
      - name: check diffs
        run: |
          cd ${{ env.FOLDER }}
          git diff
      - name: Get all changed .js file(s) or any file in the static folder excluding the docs folder
        id: changed-files-excluded
        uses: tj-actions/changed-files@v36
        with:
         files: |
          **.proto
      - name: Run step if any .js file(s) or any file in the static folder change
        if: steps.changed-files-excluded.outputs.any_changed == 'true'
        run: |
          echo "One or more .js file(s) or any file in the static folder but not in the doc folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-excluded.outputs.all_changed_files }}"

      # - name: Run commit
      #   run: |
      #     cd ${{ env.FOLDER }}
      #     # set commiter identity
      #     git config user.email "serhii.khylyk@gmail.com"
      #     git config user.name "Serhii Khylyk"
      #     # Commit the changes and push the feature branch to origin
      #     git add .
      #     git commit -m "update proto to ${{ env.LATEST_TAG }}"
      #     git push origin ${{ env.BRANCH_NAME }}
      # - name: make PR
      #   run: |
      #     cd ${{ env.FOLDER }}
      #     echo ${{ secrets.GH_TOKEN }} | gh auth login --with-token
      #     gh pr create \
      #       --body "" \
      #       --title "update proto to ${{ env.LATEST_TAG }}" \
      #       --head "${{ env.BRANCH_NAME }}" \
      #       --base "main" \
      #       --assignee "ssh2003"
